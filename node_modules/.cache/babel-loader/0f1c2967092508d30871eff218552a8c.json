{"ast":null,"code":"import XLSX from 'xlsx';\n/* generate an array of column objects */\n\nexport const make_cols = refstr => {\n  let o = [];\n\n  for (let rowNum = range.s.r; rowNum <= range.e.r; rowNum++) {\n    let row = [];\n\n    for (let colNum = range.s.c; colNum <= range.e.c; colNum++) {\n      var nextCell = sheet[XLSX.utils.encode_cell({\n        r: rowNum,\n        c: colNum\n      })];\n\n      if (typeof nextCell === 'undefined') {\n        row.push(void 0);\n      } else row.push(nextCell.w);\n    }\n\n    o.push(row);\n    return o;\n  }\n};","map":{"version":3,"sources":["/Users/meenumaria/Desktop/import-excel-code/src/components/MakeColumns.js"],"names":["XLSX","make_cols","refstr","o","rowNum","range","s","r","e","row","colNum","c","nextCell","sheet","utils","encode_cell","push","w"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA;;AACA,OAAO,MAAMC,SAAS,GAAGC,MAAM,IAAI;AAClC,MAAIC,CAAC,GAAG,EAAR;;AACA,OAAI,IAAIC,MAAM,GAAGC,KAAK,CAACC,CAAN,CAAQC,CAAzB,EAA4BH,MAAM,IAAIC,KAAK,CAACG,CAAN,CAAQD,CAA9C,EAAiDH,MAAM,EAAvD,EAA0D;AACzD,QAAIK,GAAG,GAAG,EAAV;;AACC,SAAI,IAAIC,MAAM,GAACL,KAAK,CAACC,CAAN,CAAQK,CAAvB,EAA0BD,MAAM,IAAEL,KAAK,CAACG,CAAN,CAAQG,CAA1C,EAA6CD,MAAM,EAAnD,EAAsD;AACtD,UAAIE,QAAQ,GAAGC,KAAK,CACjBb,IAAI,CAACc,KAAL,CAAWC,WAAX,CAAuB;AAACR,QAAAA,CAAC,EAAEH,MAAJ;AAAYO,QAAAA,CAAC,EAAED;AAAf,OAAvB,CADiB,CAApB;;AAGA,UAAI,OAAOE,QAAP,KAAoB,WAAxB,EAAqC;AAClCH,QAAAA,GAAG,CAACO,IAAJ,CAAS,KAAK,CAAd;AACF,OAFD,MAEOP,GAAG,CAACO,IAAJ,CAASJ,QAAQ,CAACK,CAAlB;AACN;;AACDd,IAAAA,CAAC,CAACa,IAAF,CAAOP,GAAP;AACA,WAAON,CAAP;AACA;AACF,CAfM","sourcesContent":["import XLSX from 'xlsx';\n/* generate an array of column objects */\nexport const make_cols = refstr => {\n\tlet o = []\n\tfor(let rowNum = range.s.r; rowNum <= range.e.r; rowNum++){\n\t\tlet row = [];\n\t\t for(let colNum=range.s.c; colNum<=range.e.c; colNum++){\n\t\t\tvar nextCell = sheet[\n\t\t\t   XLSX.utils.encode_cell({r: rowNum, c: colNum})\n\t\t\t];\n\t\t\tif( typeof nextCell === 'undefined' ){\n\t\t\t   row.push(void 0);\n\t\t\t} else row.push(nextCell.w);\n\t\t }\n\t\t o.push(row);\n\t\t return o;\n\t }\n};\n\n"]},"metadata":{},"sourceType":"module"}